/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package referenciales;

import conexion.conexion;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static movimiento_ventas.Busqueda_Mercaderia.txtbuscar;
import static movimiento_ventas.presupuest.txtn;

/**
 *
 * @author Matrix
 */
public class Articulos extends javax.swing.JFrame {

    String accion = "";
    conexion bd = new conexion();

    public Articulos() {
        bd.conecta();
        initComponents();
        cargar_tabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        txtbuscar = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnuevo = new javax.swing.JButton();
        btmodificar = new javax.swing.JButton();
        bteliminar = new javax.swing.JButton();
        btguardar = new javax.swing.JButton();
        btcancelar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtcodigo = new javax.swing.JTextField();
        txtdescripcion = new javax.swing.JTextField();
        txtprecioc = new javax.swing.JTextField();
        txtpreciov = new javax.swing.JTextField();
        jcMousePanel1 = new jcMousePanel.jcMousePanel();
        txtcantidad = new javax.swing.JTextField();
        txtmarca = new javax.swing.JTextField();
        txtidmarca = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtidimpuesto = new javax.swing.JTextField();
        txtimpuesto = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtiddeposito = new javax.swing.JTextField();
        txtdeposito = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jcMousePanel2 = new jcMousePanel.jcMousePanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Articulos::.");
        getContentPane().setLayout(null);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripcion", "Marca", "Precio C", "Precio V", "Impuesto", "Stock", "Deposito"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setGridColor(new java.awt.Color(255, 255, 255));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaMousePressed(evt);
            }
        });
        tabla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tablaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 70, 720, 200);

        txtbuscar.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtbuscar.setForeground(new java.awt.Color(0, 153, 204));
        txtbuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtbuscarKeyReleased(evt);
            }
        });
        getContentPane().add(txtbuscar);
        txtbuscar.setBounds(410, 40, 330, 30);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)), "......"));
        jPanel2.setLayout(null);

        btnuevo.setBackground(new java.awt.Color(0, 153, 153));
        btnuevo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnuevo.setForeground(new java.awt.Color(0, 102, 153));
        btnuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/icon/nuevo.png"))); // NOI18N
        btnuevo.setText("Nuevo");
        btnuevo.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnuevo.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnuevo.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        btnuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnuevoActionPerformed(evt);
            }
        });
        jPanel2.add(btnuevo);
        btnuevo.setBounds(20, 80, 130, 40);

        btmodificar.setBackground(new java.awt.Color(0, 153, 153));
        btmodificar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btmodificar.setForeground(new java.awt.Color(0, 102, 153));
        btmodificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/icon/editar.png"))); // NOI18N
        btmodificar.setText("Modificar");
        btmodificar.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btmodificar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btmodificar.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        btmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmodificarActionPerformed(evt);
            }
        });
        jPanel2.add(btmodificar);
        btmodificar.setBounds(20, 120, 130, 40);

        bteliminar.setBackground(new java.awt.Color(0, 153, 153));
        bteliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bteliminar.setForeground(new java.awt.Color(0, 102, 153));
        bteliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/icon/borrar.png"))); // NOI18N
        bteliminar.setText("Eliminar");
        bteliminar.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        bteliminar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        bteliminar.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bteliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bteliminarActionPerformed(evt);
            }
        });
        jPanel2.add(bteliminar);
        bteliminar.setBounds(20, 160, 130, 40);

        btguardar.setBackground(new java.awt.Color(0, 153, 153));
        btguardar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btguardar.setForeground(new java.awt.Color(0, 102, 153));
        btguardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/icon/Save.png"))); // NOI18N
        btguardar.setText("Guardar");
        btguardar.setEnabled(false);
        btguardar.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btguardar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btguardar.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        btguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btguardarActionPerformed(evt);
            }
        });
        jPanel2.add(btguardar);
        btguardar.setBounds(20, 200, 130, 40);

        btcancelar.setBackground(new java.awt.Color(0, 153, 153));
        btcancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btcancelar.setForeground(new java.awt.Color(0, 102, 153));
        btcancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/icon/cancelar.png"))); // NOI18N
        btcancelar.setText("Cancelar");
        btcancelar.setEnabled(false);
        btcancelar.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btcancelar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btcancelar.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        btcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btcancelarActionPerformed(evt);
            }
        });
        jPanel2.add(btcancelar);
        btcancelar.setBounds(20, 240, 130, 40);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(580, 270, 160, 360);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)), "Detalle"));
        jPanel1.setLayout(null);

        txtcodigo.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtcodigo.setForeground(new java.awt.Color(0, 153, 204));
        txtcodigo.setEnabled(false);
        jPanel1.add(txtcodigo);
        txtcodigo.setBounds(140, 20, 60, 30);

        txtdescripcion.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtdescripcion.setForeground(new java.awt.Color(0, 153, 204));
        txtdescripcion.setEnabled(false);
        txtdescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtdescripcionKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtdescripcionKeyReleased(evt);
            }
        });
        jPanel1.add(txtdescripcion);
        txtdescripcion.setBounds(140, 60, 180, 30);

        txtprecioc.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtprecioc.setForeground(new java.awt.Color(0, 153, 204));
        txtprecioc.setEnabled(false);
        txtprecioc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpreciocKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpreciocKeyTyped(evt);
            }
        });
        jPanel1.add(txtprecioc);
        txtprecioc.setBounds(140, 100, 180, 30);

        txtpreciov.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtpreciov.setForeground(new java.awt.Color(0, 153, 204));
        txtpreciov.setEnabled(false);
        txtpreciov.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpreciovKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpreciovKeyTyped(evt);
            }
        });
        jPanel1.add(txtpreciov);
        txtpreciov.setBounds(140, 140, 180, 30);

        jcMousePanel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/mercaderias.jpg"))); // NOI18N
        jcMousePanel1.setVisibleLogo(false);
        jcMousePanel1.setLayout(null);
        jPanel1.add(jcMousePanel1);
        jcMousePanel1.setBounds(340, 90, 210, 170);

        txtcantidad.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtcantidad.setForeground(new java.awt.Color(0, 153, 204));
        txtcantidad.setEnabled(false);
        txtcantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcantidadKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcantidadKeyTyped(evt);
            }
        });
        jPanel1.add(txtcantidad);
        txtcantidad.setBounds(140, 220, 70, 30);

        txtmarca.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtmarca.setForeground(new java.awt.Color(0, 153, 204));
        txtmarca.setEnabled(false);
        txtmarca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtmarcaKeyReleased(evt);
            }
        });
        jPanel1.add(txtmarca);
        txtmarca.setBounds(200, 180, 120, 30);

        txtidmarca.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtidmarca.setForeground(new java.awt.Color(0, 153, 204));
        txtidmarca.setEnabled(false);
        txtidmarca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtidmarcaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtidmarcaKeyTyped(evt);
            }
        });
        jPanel1.add(txtidmarca);
        txtidmarca.setBounds(140, 180, 50, 30);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 204));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Codigo:");
        jLabel9.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel9.setVerifyInputWhenFocusTarget(false);
        jPanel1.add(jLabel9);
        jLabel9.setBounds(0, 20, 100, 20);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 51, 204));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Marca:");
        jLabel10.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel10.setVerifyInputWhenFocusTarget(false);
        jPanel1.add(jLabel10);
        jLabel10.setBounds(0, 180, 100, 20);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 51, 204));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Producto:");
        jLabel11.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel11.setVerifyInputWhenFocusTarget(false);
        jPanel1.add(jLabel11);
        jLabel11.setBounds(0, 60, 100, 20);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 51, 204));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Precio Compra:");
        jLabel12.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel12.setVerifyInputWhenFocusTarget(false);
        jPanel1.add(jLabel12);
        jLabel12.setBounds(0, 100, 100, 20);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 51, 204));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Precio Venta:");
        jLabel13.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel13.setVerifyInputWhenFocusTarget(false);
        jPanel1.add(jLabel13);
        jLabel13.setBounds(0, 140, 100, 20);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 51, 204));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Cantidad:");
        jLabel14.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel14.setVerifyInputWhenFocusTarget(false);
        jPanel1.add(jLabel14);
        jLabel14.setBounds(0, 220, 100, 20);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 51, 204));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Impuesto:");
        jLabel15.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel15.setVerifyInputWhenFocusTarget(false);
        jPanel1.add(jLabel15);
        jLabel15.setBounds(0, 260, 100, 20);

        txtidimpuesto.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtidimpuesto.setForeground(new java.awt.Color(0, 153, 204));
        txtidimpuesto.setEnabled(false);
        txtidimpuesto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtidimpuestoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtidimpuestoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtidimpuestoKeyTyped(evt);
            }
        });
        jPanel1.add(txtidimpuesto);
        txtidimpuesto.setBounds(140, 260, 50, 30);

        txtimpuesto.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtimpuesto.setForeground(new java.awt.Color(0, 153, 204));
        txtimpuesto.setEnabled(false);
        jPanel1.add(txtimpuesto);
        txtimpuesto.setBounds(200, 260, 120, 30);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 51, 204));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Deposito");
        jLabel16.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel16.setVerifyInputWhenFocusTarget(false);
        jPanel1.add(jLabel16);
        jLabel16.setBounds(0, 300, 100, 20);

        txtiddeposito.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtiddeposito.setForeground(new java.awt.Color(0, 153, 204));
        txtiddeposito.setEnabled(false);
        txtiddeposito.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtiddepositoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtiddepositoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtiddepositoKeyTyped(evt);
            }
        });
        jPanel1.add(txtiddeposito);
        txtiddeposito.setBounds(140, 300, 50, 30);

        txtdeposito.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        txtdeposito.setForeground(new java.awt.Color(0, 153, 204));
        txtdeposito.setEnabled(false);
        jPanel1.add(txtdeposito);
        txtdeposito.setBounds(200, 300, 120, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 270, 560, 360);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 204));
        jLabel1.setText("Mercaderia");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(240, 20, 180, 20);

        jcMousePanel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/fondo.jpg"))); // NOI18N
        jcMousePanel2.setVisibleLogo(false);
        getContentPane().add(jcMousePanel2);
        jcMousePanel2.setBounds(-60, -80, 940, 740);

        setSize(new java.awt.Dimension(783, 690));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnuevoActionPerformed
        accion = "nuevo";
        btcancelar.doClick();
        btcancelar.setEnabled(true);
        bd.autonumerico("articulos", "id_articulo", txtcodigo);
        limpiar_campos1();
        txtdescripcion.setEnabled(true);
        txtdescripcion.requestFocus();
        bd.deshabilitar_botones(btnuevo, btmodificar, bteliminar, btguardar);
    }//GEN-LAST:event_btnuevoActionPerformed

    private void btmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmodificarActionPerformed
        if (txtcodigo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Seleccione un registro", "Informe", JOptionPane.INFORMATION_MESSAGE);
        } else {
            accion = "modificar";
            btcancelar.setEnabled(true);
            bd.deshabilitar_botones(btnuevo, btmodificar, bteliminar, btguardar);
            habilitar_campos();
            txtdescripcion.requestFocus();

        }
    }//GEN-LAST:event_btmodificarActionPerformed

    private void bteliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bteliminarActionPerformed
        if (txtcodigo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Seleccione un registro", "Informe", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int mensaje = JOptionPane.showConfirmDialog(null, "Desea eliminar el registro", "Informe", JOptionPane.YES_NO_OPTION);
            if (mensaje == JOptionPane.YES_OPTION) {
                try {
                    String sql = "delete from articulos where id_articulo=?";
                    PreparedStatement eli = bd.conexion.prepareStatement(sql);
                    eli.setInt(1, Integer.parseInt(txtcodigo.getText()));
                    eli.execute();

                    // eliminar el stock creado
                    String sql1 = "delete from stock where id_articulo=? and id_deposito= ?";
                    PreparedStatement eli2 = bd.conexion.prepareStatement(sql1);
                    eli2.setInt(1, Integer.parseInt(txtcodigo.getText()));
                    eli2.setInt(2, Integer.parseInt(txtiddeposito.getText()));
                    eli2.execute();
                    cargar_tabla();
                    limpiar_campos();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error al eliminar la tabla" + e);
                }
            }

        }
    }//GEN-LAST:event_bteliminarActionPerformed

    private void btguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btguardarActionPerformed
        if (txtdescripcion.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe Ingresar Porducto", "Informe", JOptionPane.INFORMATION_MESSAGE);
            txtdescripcion.requestFocus();
            return;
        }
        if (txtidmarca.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe Ingresar Codigo Marca", "Informe", JOptionPane.INFORMATION_MESSAGE);
            txtidmarca.requestFocus();
            return;
        }
        if (txtprecioc.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe Ingresar Precio Compra", "Informe", JOptionPane.INFORMATION_MESSAGE);
            txtprecioc.requestFocus();
            return;
        }
        if (txtpreciov.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe Ingresar Precio Venta", "Informe", JOptionPane.INFORMATION_MESSAGE);
            txtpreciov.requestFocus();
            return;
        }
        if (txtcantidad.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe Ingresar Cantidad", "Informe", JOptionPane.INFORMATION_MESSAGE);
            txtcantidad.requestFocus();
            return;
        }
        if (txtidimpuesto.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Verifique el Impuesto", "Informe", JOptionPane.INFORMATION_MESSAGE);
            txtidimpuesto.requestFocus();
            return;
        }

        if (txtiddeposito.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Verifique el Deposito", "Informe", JOptionPane.INFORMATION_MESSAGE);
            txtiddeposito.requestFocus();
            return;
        }

        int vprecioc = 0, vpreciov = 0, vcant = 0;
        vprecioc = Integer.parseInt(txtprecioc.getText().trim());
        vpreciov = Integer.parseInt(txtpreciov.getText().trim());
        vcant = Integer.parseInt(txtcantidad.getText().trim());

        if (vcant <= 0) {
            JOptionPane.showMessageDialog(null, "La cantidad no puede ser 0:.", "Informe", JOptionPane.ERROR_MESSAGE);
            txtcantidad.setText("");
            txtcantidad.requestFocus();
            return;
        }

        if (vprecioc > vpreciov) {
            JOptionPane.showMessageDialog(null, "El precio de Venta no puede ser menor al de Compra:.", "Informe", JOptionPane.ERROR_MESSAGE);
            txtpreciov.requestFocus();
            txtpreciov.setText("");
            return;
        }
        txtcantidad.requestFocus();

        grabar();

    }//GEN-LAST:event_btguardarActionPerformed

    private void btcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btcancelarActionPerformed
        accion = "";
        btcancelar.setEnabled(false);
        bd.habilitar_botones(btnuevo, btmodificar, bteliminar, btguardar);
        limpiar_campos();
        deshabilitar_campos();
        txtbuscar.requestFocus();
    }//GEN-LAST:event_btcancelarActionPerformed

    private void txtdescripcionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdescripcionKeyReleased
        txtdescripcion.setText(txtdescripcion.getText().toUpperCase());
    }//GEN-LAST:event_txtdescripcionKeyReleased

    private void txtpreciocKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpreciocKeyTyped
        if (Character.isDigit(evt.getKeyChar()) == false) {
            evt.consume();
        }
    }//GEN-LAST:event_txtpreciocKeyTyped

    private void txtpreciovKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpreciovKeyTyped
        if (Character.isDigit(evt.getKeyChar()) == false) {
            evt.consume();
        }
    }//GEN-LAST:event_txtpreciovKeyTyped

    private void txtcantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcantidadKeyTyped
        if (Character.isDigit(evt.getKeyChar()) == false) {
            evt.consume();
        }
        if (txtcantidad.getText().length() > 7) {  //ingresa hasta 4 digitos
            evt.consume();

        }
    }//GEN-LAST:event_txtcantidadKeyTyped

    private void txtmarcaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmarcaKeyReleased
        txtmarca.setText(txtmarca.getText().toUpperCase());
    }//GEN-LAST:event_txtmarcaKeyReleased

    private void txtidmarcaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidmarcaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txtidmarca.getText().isEmpty()) {
                //buscador
                new buscadores.buscador_marca(null, true).setVisible(true);
            } else {
                recuperar_marca();

            }
        }
    }//GEN-LAST:event_txtidmarcaKeyPressed

    private void txtidmarcaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidmarcaKeyTyped
        if (Character.isDigit(evt.getKeyChar()) == false) {
            evt.consume();
        }
    }//GEN-LAST:event_txtidmarcaKeyTyped

    private void txtidimpuestoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidimpuestoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txtidimpuesto.getText().isEmpty()) {
                //buscador
                new buscadores.buscador_impuesto(null, true).setVisible(true);
            } else {
                recuperar_impuesto();

            }
        }
    }//GEN-LAST:event_txtidimpuestoKeyPressed

    private void txtidimpuestoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidimpuestoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidimpuestoKeyReleased

    private void txtiddepositoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtiddepositoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txtiddeposito.getText().isEmpty()) {
                //buscador
                new buscadores.buscador_deposito(null, true).setVisible(true);
            } else {
                recuperar_deposito();

            }
        }
    }//GEN-LAST:event_txtiddepositoKeyPressed

    private void txtiddepositoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtiddepositoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtiddepositoKeyReleased

    private void txtdescripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdescripcionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtprecioc.setEnabled(true);
            txtprecioc.requestFocus();
        }

    }//GEN-LAST:event_txtdescripcionKeyPressed

    private void txtpreciocKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpreciocKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtpreciov.setEnabled(true);
            txtpreciov.requestFocus();
        }
    }//GEN-LAST:event_txtpreciocKeyPressed

    private void txtpreciovKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpreciovKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtidmarca.setEnabled(true);
            txtidmarca.requestFocus();
        }
    }//GEN-LAST:event_txtpreciovKeyPressed

    private void txtcantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcantidadKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtidimpuesto.setEnabled(true);
            txtidimpuesto.requestFocus();
        }
    }//GEN-LAST:event_txtcantidadKeyPressed

    private void txtbuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscarKeyReleased
        cargar_tabla();
    }//GEN-LAST:event_txtbuscarKeyReleased

    private void tablaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaKeyPressed
        if (accion.equals("")) {
            String vid = tabla.getValueAt(tabla.getSelectedRow(), 0).toString();
            txtcodigo.setText(vid);
            recuperar_datos();

        }
    }//GEN-LAST:event_tablaKeyPressed

    private void tablaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaKeyReleased
        if (accion.equals("")) {
            String vid = tabla.getValueAt(tabla.getSelectedRow(), 0).toString();
            txtcodigo.setText(vid);
            recuperar_datos();

        }
    }//GEN-LAST:event_tablaKeyReleased

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        if (accion.equals("")) {
            String vid = tabla.getValueAt(tabla.getSelectedRow(), 0).toString();
            txtcodigo.setText(vid);
            recuperar_datos();

        }
    }//GEN-LAST:event_tablaMouseClicked

    private void txtbuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (tabla.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "No existe ningun registro");
                txtbuscar.setText("");
                cargar_tabla();
                txtbuscar.requestFocus();
            } else {
                tabla.getSelectionModel().setSelectionInterval(0, 0);
                tabla.requestFocus();
                
               
            }
        }
    }//GEN-LAST:event_txtbuscarKeyPressed

    private void tablaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMousePressed
        if (accion.equals("")) {
            String vid = tabla.getValueAt(tabla.getSelectedRow(), 0).toString();
            txtcodigo.setText(vid);
            recuperar_datos();

        }
    }//GEN-LAST:event_tablaMousePressed

    private void txtidimpuestoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidimpuestoKeyTyped
        if (Character.isDigit(evt.getKeyChar()) == false) {
            evt.consume();
        }
    }//GEN-LAST:event_txtidimpuestoKeyTyped

    private void txtiddepositoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtiddepositoKeyTyped
        if (Character.isDigit(evt.getKeyChar()) == false) {
            evt.consume();
        }
    }//GEN-LAST:event_txtiddepositoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Articulos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btcancelar;
    public static javax.swing.JButton bteliminar;
    public static javax.swing.JButton btguardar;
    public static javax.swing.JButton btmodificar;
    public static javax.swing.JButton btnuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private jcMousePanel.jcMousePanel jcMousePanel1;
    private jcMousePanel.jcMousePanel jcMousePanel2;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtbuscar;
    public static javax.swing.JTextField txtcantidad;
    public javax.swing.JTextField txtcodigo;
    public static javax.swing.JTextField txtdeposito;
    public javax.swing.JTextField txtdescripcion;
    public static javax.swing.JTextField txtiddeposito;
    public static javax.swing.JTextField txtidimpuesto;
    public static javax.swing.JTextField txtidmarca;
    public static javax.swing.JTextField txtimpuesto;
    public static javax.swing.JTextField txtmarca;
    public javax.swing.JTextField txtprecioc;
    public javax.swing.JTextField txtpreciov;
    // End of variables declaration//GEN-END:variables

    private void cargar_tabla() {
        DefaultTableModel tab = (DefaultTableModel) tabla.getModel();
        tab.setRowCount(0);
        DecimalFormat formato = new DecimalFormat("#,##0");
        try {
            // ilike busca las letras por mayusculas y minisculas
            bd.listar_datos("SELECT s.id_articulo as codigo,  s.stock_cant as cantidad,s.id_deposito as deposito,  a.art_descri as descripcion,"
                    + "a.art_precioc as precio ,a.art_preciov as preciov, a.id_impuesto as impuesto\n"
                    + "  FROM stock s "
                    + " inner join articulos a on a.id_articulo= s.id_articulo \n"
                    + "  where s.id_articulo ::text like'%" + txtbuscar.getText() + "%' or a.art_descri ilike '%" + txtbuscar.getText() + "%';");
            while (bd.resultado.next()) {
                tab.addRow(new Object[]{bd.resultado.getString("codigo"),
                    bd.resultado.getString("descripcion"),
                    bd.resultado.getString("impuesto"),
                    formato.format(bd.resultado.getInt("precio")),
                    formato.format(bd.resultado.getInt("preciov")),
                    bd.resultado.getString("impuesto"),
                    bd.resultado.getString("cantidad"),
                    bd.resultado.getString("deposito")});

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al cargar la tabla" + e);
        }
    }

    private void habilitar_campos() {
        txtdescripcion.setEnabled(true);
        txtprecioc.setEnabled(true);
        txtpreciov.setEnabled(true);
        txtidmarca.setEnabled(true);
        txtidimpuesto.setEnabled(true);
        txtiddeposito.setEnabled(true);
        txtcantidad.setEnabled(true);
    }

    private void limpiar_campos() {
        txtcodigo.setText("");
        txtdescripcion.setText("");
        txtprecioc.setText("");
        txtpreciov.setText("");
        txtidmarca.setText("");
        txtmarca.setText("");
        txtidimpuesto.setText("");
        txtimpuesto.setText("");
        txtiddeposito.setText("");
        txtdeposito.setText("");
        txtcantidad.setText("");
    }

    private void limpiar_campos1() {

        txtdescripcion.setText("");
        txtprecioc.setText("");
        txtpreciov.setText("");
        txtidmarca.setText("");
        txtmarca.setText("");
        txtidimpuesto.setText("");
        txtimpuesto.setText("");
        txtiddeposito.setText("");
        txtdeposito.setText("");
        txtcantidad.setText("");
    }

    private void deshabilitar_campos() {
        txtdescripcion.setEnabled(false);
        txtprecioc.setEnabled(false);
        txtpreciov.setEnabled(false);
        txtidmarca.setEnabled(false);
        txtmarca.setEnabled(false);
        txtidimpuesto.setEnabled(false);
        txtimpuesto.setEnabled(false);
        txtiddeposito.setEnabled(false);
        txtdeposito.setEnabled(false);
        txtcantidad.setEnabled(false);
    }

    private void grabar() {
        if (accion.equals("nuevo")) {
            //guardar
            try {
                String sql = "INSERT INTO articulos(id_articulo, id_impuesto, id_marca, art_descri, art_precioc, \n"
                        + "            art_preciov)\n"
                        + "    VALUES (?, ?, ?, ?, ?, ?);";
                PreparedStatement p = bd.conexion.prepareStatement(sql);
                p.setInt(1, Integer.parseInt(txtcodigo.getText()));
                p.setInt(2, Integer.parseInt(txtidimpuesto.getText()));
                p.setInt(3, Integer.parseInt(txtidmarca.getText()));
                p.setString(4, txtdescripcion.getText());
                p.setInt(5, Integer.parseInt(txtprecioc.getText()));
                p.setInt(6, Integer.parseInt(txtpreciov.getText()));
                p.execute();

                //insertamos el stock
                try {
                    String sql1 = "INSERT INTO stock(\n"
                            + "            id_articulo, id_deposito, stock_cant)\n"
                            + "    VALUES (?, ?, ?);";
                    PreparedStatement p1 = bd.conexion.prepareStatement(sql1);
                    p1.setInt(1, Integer.parseInt(txtcodigo.getText()));
                    p1.setInt(2, Integer.parseInt(txtiddeposito.getText()));
                    p1.setInt(3, Integer.parseInt(txtcantidad.getText()));
                    p1.execute();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error al guardar los datos de stock" + e);
                }

                cargar_tabla();
                btcancelar.doClick();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al guardar los datos" + e);
            }

        } else {
            //modificar
            try {
                String sql = "UPDATE articulos\n"
                        + "   SET id_impuesto=?, id_marca=?, art_descri=?, art_precioc=?, \n"
                        + "       art_preciov=?\n"
                        + " WHERE id_articulo=?;";
                PreparedStatement p = bd.conexion.prepareStatement(sql);
                p.setInt(6, Integer.parseInt(txtcodigo.getText()));
                p.setInt(1, Integer.parseInt(txtidimpuesto.getText()));
                p.setInt(2, Integer.parseInt(txtidmarca.getText()));
                p.setString(3, txtdescripcion.getText());
                p.setInt(4, Integer.parseInt(txtprecioc.getText()));
                p.setInt(5, Integer.parseInt(txtpreciov.getText()));
                p.execute();

                try {

                    String sql1 = " UPDATE stock    SET stock_cant = ? WHERE  id_articulo =  ? and id_deposito =  ?;";
                    PreparedStatement p2 = bd.conexion.prepareStatement(sql1);
                    p2.setInt(2, Integer.parseInt(txtcodigo.getText()));
                    p2.setInt(3, Integer.parseInt(txtiddeposito.getText()));
                    p2.setInt(1, Integer.parseInt(txtcantidad.getText()));
                    p2.execute();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Error al guardar los datos de stock" + ex);
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al modificar el registro de stock" + e);
            }

            cargar_tabla();
            btcancelar.doClick();

        }
    }

    private void recuperar_datos() {
        try {
            bd.listar_datos("SELECT s.id_articulo as codigo,  s.stock_cant as cantidad,s.id_deposito as deposito,  a.art_descri as descripcion,"
                    + "a.art_precioc as precio ,a.id_marca as marca ,a.art_preciov as precioventa,a.id_impuesto as impuesto\n"
                    + "  FROM stock s "
                    + " inner join articulos a on a.id_articulo= s.id_articulo \n"
                    + "  where s.id_articulo=" + txtcodigo.getText() + ";");
            if (bd.resultado.next()) {
                txtidmarca.setText(bd.resultado.getString("marca"));
                txtdescripcion.setText(bd.resultado.getString("descripcion"));
                txtprecioc.setText(bd.resultado.getString("precio"));
                txtpreciov.setText(bd.resultado.getString("precioventa"));
                txtcantidad.setText(bd.resultado.getString("cantidad"));
                txtidimpuesto.setText(bd.resultado.getString("impuesto"));
                txtiddeposito.setText(bd.resultado.getString("deposito"));
//                formulariomerc.cbimpuesto.setSelectedItem(conex.resultado.getString("impuesto"));

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al recuperar la tabla" + e);
        }
    }

    private void recuperar_impuesto() {

        try {
            bd.listar_datos("SELECT id_impuesto, imp_descri\n"
                    + "  FROM impuesto where id_impuesto =" + txtidimpuesto.getText() + "");
            if (bd.resultado.next()) {
                txtimpuesto.setText(bd.resultado.getString("imp_descri"));
                txtiddeposito.setEnabled(true);
                txtiddeposito.requestFocus();
            } else {
                txtidimpuesto.requestFocus();
                txtidimpuesto.setSelectionStart(0);
                txtidimpuesto.setSelectionColor(Color.red);
                JOptionPane.showMessageDialog(null, "No existe codigo ingresado\nPor favor verifique", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Error al recuperar la tabla" + e);
        }
    }

    private void recuperar_marca() {
        try {
            bd.listar_datos("SELECT id_marca, mar_descri\n"
                    + "  FROM marca where id_marca =" + txtidmarca.getText() + "");
            if (bd.resultado.next()) {
                txtmarca.setText(bd.resultado.getString("mar_descri"));
                txtcantidad.setEnabled(true);
                txtcantidad.requestFocus();
            } else {
                txtidmarca.requestFocus();
                txtidmarca.setSelectionStart(0);
                txtidmarca.setSelectionColor(Color.red);
                JOptionPane.showMessageDialog(null, "No existe codigo ingresado\nPor favor verifique", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Error al recuperar la tabla" + e);
        }
    }

    private void recuperar_deposito() {
        try {
            bd.listar_datos("SELECT id_deposito, dep_descri\n"
                    + "  FROM deposito where id_deposito =" + txtiddeposito.getText() + "");
            if (bd.resultado.next()) {
                txtdeposito.setText(bd.resultado.getString("dep_descri"));
                btguardar.doClick();
            } else {
                txtiddeposito.requestFocus();
                txtiddeposito.setSelectionStart(0);
                txtiddeposito.setSelectionColor(Color.red);
                JOptionPane.showMessageDialog(null, "No existe codigo ingresado\nPor favor verifique", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Error al recuperar la tabla" + e);
        }
    }

}
